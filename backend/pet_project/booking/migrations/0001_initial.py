# Generated by Django 4.2.11 on 2025-07-07 03:47

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Admins',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('admin_name', models.CharField(max_length=100)),
                ('admin_email', models.CharField(max_length=100, unique=True)),
                ('admin_password_hash', models.CharField(max_length=255)),
                ('created_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'admins',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Bookings',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('total_price', models.IntegerField()),
                ('booking_status', models.CharField(max_length=50)),
                ('create_at', models.DateTimeField(blank=True, null=True)),
                ('booking_type', models.CharField(max_length=7)),
                ('customer_name', models.CharField(blank=True, max_length=100, null=True)),
                ('customer_phone', models.CharField(blank=True, max_length=10, null=True)),
                ('update_at', models.DateTimeField(blank=True, null=True)),
                ('admin', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='booking.admins')),
            ],
            options={
                'db_table': 'bookings',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Cinemas',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cinemas_name', models.CharField(max_length=100)),
                ('cinemas_address', models.CharField(max_length=255)),
                ('create_at', models.DateTimeField(blank=True, null=True)),
                ('update_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'cinemas',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Genres',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('genre_name', models.CharField(max_length=255, unique=True)),
                ('create_at', models.DateTimeField(blank=True, null=True)),
                ('update_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'genres',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Movies',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True, null=True)),
                ('duration', models.IntegerField()),
                ('age_rating', models.CharField(blank=True, max_length=10, null=True)),
                ('trailer_url', models.TextField(blank=True, null=True)),
                ('movie_poster_url', models.TextField(blank=True, null=True)),
                ('release_date', models.DateField(blank=True, null=True)),
                ('create_at', models.DateTimeField(blank=True, null=True)),
                ('update_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'movies',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Permissions',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('permission_name', models.CharField(max_length=100, unique=True)),
                ('permission_description', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'permissions',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Roles',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('role_name', models.CharField(max_length=50, unique=True)),
                ('create_at', models.DateTimeField(blank=True, null=True)),
                ('update_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'roles',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Rooms',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('room_name', models.CharField(max_length=100)),
                ('room_number', models.CharField(max_length=10)),
                ('create_at', models.DateTimeField(blank=True, null=True)),
                ('update_at', models.DateTimeField(blank=True, null=True)),
                ('cinema', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='booking.cinemas')),
            ],
            options={
                'db_table': 'rooms',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='SeatTypes',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('seat_type_name', models.CharField(max_length=50, unique=True)),
                ('seat_type_description', models.TextField(blank=True, null=True)),
                ('seat_type_color_code', models.CharField(blank=True, max_length=10, null=True)),
                ('seat_type_status', models.CharField(blank=True, max_length=20, null=True)),
                ('create_at', models.DateTimeField(blank=True, null=True)),
                ('update_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'seat_types',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Services',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('service_name', models.CharField(max_length=100)),
                ('service_description', models.TextField(blank=True, null=True)),
                ('service_price', models.IntegerField()),
                ('service_image_url', models.TextField(blank=True, null=True)),
                ('create_at', models.DateTimeField(blank=True, null=True)),
                ('update_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'services',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Users',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_name', models.CharField(max_length=100)),
                ('user_email', models.CharField(max_length=100)),
                ('user_phone', models.CharField(max_length=10)),
                ('user_address', models.CharField(max_length=255)),
                ('password_hash', models.CharField(max_length=255)),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('account_type', models.CharField(blank=True, max_length=50, null=True)),
                ('create_at', models.DateTimeField(blank=True, null=True)),
                ('update_at', models.DateTimeField(blank=True, null=True)),
                ('role', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='booking.roles')),
            ],
            options={
                'db_table': 'users',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Showtimes',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_time', models.DateTimeField()),
                ('base_price', models.IntegerField()),
                ('create_at', models.DateTimeField(blank=True, null=True)),
                ('update_at', models.DateTimeField(blank=True, null=True)),
                ('movie', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='booking.movies')),
                ('room', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='booking.rooms')),
            ],
            options={
                'db_table': 'showtimes',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Seats',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('seat_number', models.CharField(max_length=10)),
                ('create_at', models.DateTimeField(blank=True, null=True)),
                ('update_at', models.DateTimeField(blank=True, null=True)),
                ('room', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='booking.rooms')),
                ('seat_type', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='booking.seattypes')),
            ],
            options={
                'db_table': 'seats',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='SeatPrices',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('price', models.IntegerField()),
                ('create_at', models.DateTimeField(blank=True, null=True)),
                ('update_at', models.DateTimeField(blank=True, null=True)),
                ('seat_type', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='booking.seattypes')),
                ('showtime', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='booking.showtimes')),
            ],
            options={
                'db_table': 'seat_prices',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Payments',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('method', models.CharField(max_length=50)),
                ('amount', models.IntegerField()),
                ('status', models.CharField(blank=True, max_length=20, null=True)),
                ('payment_transaction_code', models.CharField(blank=True, max_length=100, null=True)),
                ('paid_at', models.DateTimeField(blank=True, null=True)),
                ('create_at', models.DateTimeField(blank=True, null=True)),
                ('booking', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='booking.bookings')),
            ],
            options={
                'db_table': 'payments',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='BookingServices',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.IntegerField()),
                ('unit_price', models.IntegerField()),
                ('create_at', models.DateTimeField(blank=True, null=True)),
                ('update_at', models.DateTimeField(blank=True, null=True)),
                ('booking', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='booking.bookings')),
                ('service', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='booking.services')),
            ],
            options={
                'db_table': 'booking_services',
                'managed': True,
            },
        ),
        migrations.AddField(
            model_name='bookings',
            name='showtime',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='booking.showtimes'),
        ),
        migrations.AddField(
            model_name='bookings',
            name='user',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='booking.users'),
        ),
        migrations.AddField(
            model_name='admins',
            name='role',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='booking.roles'),
        ),
        migrations.CreateModel(
            name='BookingDetails',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_at', models.DateTimeField(blank=True, null=True)),
                ('update_at', models.DateTimeField(blank=True, null=True)),
                ('booking', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='booking.bookings')),
                ('seat', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='booking.seats')),
            ],
            options={
                'db_table': 'booking_details',
                'managed': True,
                'unique_together': {('booking', 'seat')},
            },
        ),
        migrations.CreateModel(
            name='RolePermissions',
            fields=[
                ('role', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='booking.roles')),
                ('permission', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='booking.permissions')),
            ],
            options={
                'db_table': 'role_permissions',
                'managed': True,
                'unique_together': {('role', 'permission')},
            },
        ),
        migrations.CreateModel(
            name='MoviesGenres',
            fields=[
                ('movie', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='booking.movies')),
                ('create_at', models.DateTimeField(blank=True, null=True)),
                ('update_at', models.DateTimeField(blank=True, null=True)),
                ('genre', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='booking.genres')),
            ],
            options={
                'db_table': 'movies_genres',
                'managed': True,
                'unique_together': {('movie', 'genre')},
            },
        ),
    ]
